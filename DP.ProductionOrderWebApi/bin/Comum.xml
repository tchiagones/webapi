<?xml version="1.0"?>
<doc>
<assembly>
<name>
Comum
</name>
</assembly>
<members>
<member name="M:Comum.wsEmail.Service.#ctor">
	<remarks/>
</member><member name="E:Comum.wsEmail.Service.HelloWorldCompleted">
	<remarks/>
</member><member name="M:Comum.wsEmail.Service.HelloWorld(System.String,System.String,System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:Comum.wsEmail.Service.HelloWorldAsync(System.String,System.String,System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:Comum.wsEmail.Service.HelloWorldAsync(System.String,System.String,System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:Comum.wsEmail.Service.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:Comum.wsEmail.Service">
	<remarks/>
</member><member name="T:Comum.wsEmail.HelloWorldCompletedEventHandler">
	<remarks/>
</member><member name="P:Comum.wsEmail.HelloWorldCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Comum.wsEmail.HelloWorldCompletedEventArgs">
	<remarks/>
</member><member name="M:Comum.Util.FormataTelefone(System.String)">
	<summary> Gera número de telefone formatado para ser mostrado na tela </summary>
	<param name="text">Número do telefone com DDD ´no formato sequencial</param>
	<returns>
 Número do telefone em um dos segunites formatos:
 
      1 - 999-9999
      2 - (99) 999-9999
      3 - (99) 9999-9999
 </returns>
</member><member name="M:Comum.Util.Encrypt(System.String,System.String)">
	<summary>
 Encripta uma string com base em uma chave
 </summary>
	<param name="stringToEncrypt">String a encriptar</param>
</member><member name="M:Comum.Util.Encrypt(System.Byte[],System.String)">
	<summary>
 Encripta uma string com base em uma chave
 </summary>
	<param name="Buffer">Bytes</param>
</member><member name="M:Comum.Util.EncryptHex(System.String,System.String)">
	<summary>
 Encripta em Hexadecimal uma string com base em uma chave
 </summary>
	<param name="stringToEncrypt">String a encriptar</param>
</member><member name="M:Comum.Util.DecryptHex(System.String,System.String)">
	<summary>
 Decripta uma string com base em uma chave
 </summary>
	<param name="stringToDecrypt">String a decriptar</param>
	<param name="key">chave de decriptação</param>
</member><member name="M:Comum.Util.RetornarParametrosDecriptados(System.String)">
	<summary>
 Decripta uma string
 </summary>
	<param name="pEncrypted">String a decriptar</param>
</member><member name="M:Comum.Util.Decrypt(System.String,System.String)">
	<summary>
 Desencripta uma string com base em uma chave
 </summary>
	<param name="encryptedString">String a decriptar</param>
</member><member name="M:Comum.Util.Decrypt(System.Byte[],System.String)">
	<summary>
 Desencripta uma string com base em uma chave
 </summary>
	<param name="Buffer">Bytes</param>
</member><member name="M:Comum.Util.CompactarArquivo(System.Byte[],System.String)">
	<summary>
 Compacta cadeia de Bytes com Criptografia
 </summary>
	<param name="Dados"></param>
	<param name="strSenha"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Comum.Util.DescompactarArquivo(System.Byte[],System.String)">
	<summary>
 Descompacta cadeia de bytes com Ciptografia
 </summary>
	<param name="Dados"></param>
	<param name="strSenha"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:Comum.Util">
	<summary> Classe de métodos utilitários </summary>
</member><member name="F:Comum.Arquivo._Nome">
	<summary> Nome do arquivo </summary>
</member><member name="F:Comum.Arquivo._Dados">
	<summary> Conteúdo do arquivo (como array de bytes) </summary>
</member><member name="P:Comum.Arquivo.Nome">
	<summary> Nome do arquivo </summary>
</member><member name="P:Comum.Arquivo.Dados">
	<summary> Conteúdo do arquivo, como array de bytes </summary>
</member><member name="T:Comum.Arquivo">
	<summary> Utilitários relacionados a arquivos </summary>
	<remarks></remarks>
</member><member name="M:Comum.wsComunikaENV.WSSend.#ctor">
	<remarks/>
</member><member name="E:Comum.wsComunikaENV.WSSend.sendMessageCompleted">
	<remarks/>
</member><member name="E:Comum.wsComunikaENV.WSSend.checkBatchNameCompleted">
	<remarks/>
</member><member name="E:Comum.wsComunikaENV.WSSend.sendBatchCompleted">
	<remarks/>
</member><member name="E:Comum.wsComunikaENV.WSSend.sendSeveralCompleted">
	<remarks/>
</member><member name="E:Comum.wsComunikaENV.WSSend.sendSeveralWithBatchCompleted">
	<remarks/>
</member><member name="E:Comum.wsComunikaENV.WSSend.sendScheduleBatchCompleted">
	<remarks/>
</member><member name="M:Comum.wsComunikaENV.WSSend.sendMessage(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.String)">
	<remarks/>
</member><member name="M:Comum.wsComunikaENV.WSSend.sendMessageAsync(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.String)">
	<remarks/>
</member><member name="M:Comum.wsComunikaENV.WSSend.sendMessageAsync(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:Comum.wsComunikaENV.WSSend.checkBatchName(System.String,System.String)">
	<remarks/>
</member><member name="M:Comum.wsComunikaENV.WSSend.checkBatchNameAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:Comum.wsComunikaENV.WSSend.checkBatchNameAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:Comum.wsComunikaENV.WSSend.sendBatch(System.String,System.String,Comum.wsComunikaENV.targetResult[],System.String,System.Int32,System.Int32,System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:Comum.wsComunikaENV.WSSend.sendBatchAsync(System.String,System.String,Comum.wsComunikaENV.targetResult[],System.String,System.Int32,System.Int32,System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:Comum.wsComunikaENV.WSSend.sendBatchAsync(System.String,System.String,Comum.wsComunikaENV.targetResult[],System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:Comum.wsComunikaENV.WSSend.sendSeveral(System.String,Comum.wsComunikaENV.messageResult[])">
	<remarks/>
</member><member name="M:Comum.wsComunikaENV.WSSend.sendSeveralAsync(System.String,Comum.wsComunikaENV.messageResult[])">
	<remarks/>
</member><member name="M:Comum.wsComunikaENV.WSSend.sendSeveralAsync(System.String,Comum.wsComunikaENV.messageResult[],System.Object)">
	<remarks/>
</member><member name="M:Comum.wsComunikaENV.WSSend.sendSeveralWithBatch(System.String,System.String,Comum.wsComunikaENV.messageResult[])">
	<remarks/>
</member><member name="M:Comum.wsComunikaENV.WSSend.sendSeveralWithBatchAsync(System.String,System.String,Comum.wsComunikaENV.messageResult[])">
	<remarks/>
</member><member name="M:Comum.wsComunikaENV.WSSend.sendSeveralWithBatchAsync(System.String,System.String,Comum.wsComunikaENV.messageResult[],System.Object)">
	<remarks/>
</member><member name="M:Comum.wsComunikaENV.WSSend.sendScheduleBatch(System.String,System.String,Comum.wsComunikaENV.targetResult[],System.String,System.String,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:Comum.wsComunikaENV.WSSend.sendScheduleBatchAsync(System.String,System.String,Comum.wsComunikaENV.targetResult[],System.String,System.String,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:Comum.wsComunikaENV.WSSend.sendScheduleBatchAsync(System.String,System.String,Comum.wsComunikaENV.targetResult[],System.String,System.String,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:Comum.wsComunikaENV.WSSend.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:Comum.wsComunikaENV.WSSend">
	<remarks/>
</member><member name="T:Comum.wsComunikaENV.responseSendMessage">
	<remarks/>
</member><member name="P:Comum.wsComunikaENV.responseGeneric.result">
	<remarks/>
</member><member name="P:Comum.wsComunikaENV.responseGeneric.resultDesc">
	<remarks/>
</member><member name="P:Comum.wsComunikaENV.responseGeneric.token">
	<remarks/>
</member><member name="T:Comum.wsComunikaENV.responseGeneric">
	<remarks/>
</member><member name="P:Comum.wsComunikaENV.messageResult.id">
	<remarks/>
</member><member name="P:Comum.wsComunikaENV.messageResult.message">
	<remarks/>
</member><member name="P:Comum.wsComunikaENV.messageResult.sched">
	<remarks/>
</member><member name="P:Comum.wsComunikaENV.messageResult.sender">
	<remarks/>
</member><member name="P:Comum.wsComunikaENV.messageResult.target">
	<remarks/>
</member><member name="P:Comum.wsComunikaENV.messageResult.periodFirst">
	<remarks/>
</member><member name="P:Comum.wsComunikaENV.messageResult.periodLast">
	<remarks/>
</member><member name="P:Comum.wsComunikaENV.messageResult.expireTime">
	<remarks/>
</member><member name="T:Comum.wsComunikaENV.messageResult">
	<remarks/>
</member><member name="P:Comum.wsComunikaENV.targetResult.id">
	<remarks/>
</member><member name="P:Comum.wsComunikaENV.targetResult.target">
	<remarks/>
</member><member name="T:Comum.wsComunikaENV.targetResult">
	<remarks/>
</member><member name="P:Comum.wsComunikaENV.messageReturn.id">
	<remarks/>
</member><member name="P:Comum.wsComunikaENV.messageReturn.result">
	<remarks/>
</member><member name="T:Comum.wsComunikaENV.messageReturn">
	<remarks/>
</member><member name="P:Comum.wsComunikaENV.scheduleMessageReturn.id">
	<remarks/>
</member><member name="P:Comum.wsComunikaENV.scheduleMessageReturn.result">
	<remarks/>
</member><member name="P:Comum.wsComunikaENV.scheduleMessageReturn.sched">
	<remarks/>
</member><member name="T:Comum.wsComunikaENV.scheduleMessageReturn">
	<remarks/>
</member><member name="T:Comum.wsComunikaENV.responseCheckBatchName">
	<remarks/>
</member><member name="P:Comum.wsComunikaENV.responseSendBatch.messageReturn">
	<remarks/>
</member><member name="T:Comum.wsComunikaENV.responseSendBatch">
	<remarks/>
</member><member name="P:Comum.wsComunikaENV.responseSendSeveral.messageReturn">
	<remarks/>
</member><member name="T:Comum.wsComunikaENV.responseSendSeveral">
	<remarks/>
</member><member name="P:Comum.wsComunikaENV.responseSendScheduleBatch.messageReturn">
	<remarks/>
</member><member name="T:Comum.wsComunikaENV.responseSendScheduleBatch">
	<remarks/>
</member><member name="T:Comum.wsComunikaENV.sendMessageCompletedEventHandler">
	<remarks/>
</member><member name="P:Comum.wsComunikaENV.sendMessageCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Comum.wsComunikaENV.sendMessageCompletedEventArgs">
	<remarks/>
</member><member name="T:Comum.wsComunikaENV.checkBatchNameCompletedEventHandler">
	<remarks/>
</member><member name="P:Comum.wsComunikaENV.checkBatchNameCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Comum.wsComunikaENV.checkBatchNameCompletedEventArgs">
	<remarks/>
</member><member name="T:Comum.wsComunikaENV.sendBatchCompletedEventHandler">
	<remarks/>
</member><member name="P:Comum.wsComunikaENV.sendBatchCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Comum.wsComunikaENV.sendBatchCompletedEventArgs">
	<remarks/>
</member><member name="T:Comum.wsComunikaENV.sendSeveralCompletedEventHandler">
	<remarks/>
</member><member name="P:Comum.wsComunikaENV.sendSeveralCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Comum.wsComunikaENV.sendSeveralCompletedEventArgs">
	<remarks/>
</member><member name="T:Comum.wsComunikaENV.sendSeveralWithBatchCompletedEventHandler">
	<remarks/>
</member><member name="P:Comum.wsComunikaENV.sendSeveralWithBatchCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Comum.wsComunikaENV.sendSeveralWithBatchCompletedEventArgs">
	<remarks/>
</member><member name="T:Comum.wsComunikaENV.sendScheduleBatchCompletedEventHandler">
	<remarks/>
</member><member name="P:Comum.wsComunikaENV.sendScheduleBatchCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Comum.wsComunikaENV.sendScheduleBatchCompletedEventArgs">
	<remarks/>
</member><member name="M:Comum.wsComunikaREC.WSReceive.#ctor">
	<remarks/>
</member><member name="E:Comum.wsComunikaREC.WSReceive.getMessageStatusByIdCompleted">
	<remarks/>
</member><member name="E:Comum.wsComunikaREC.WSReceive.getMessageStatusByPeriodCompleted">
	<remarks/>
</member><member name="E:Comum.wsComunikaREC.WSReceive.getMessageStatusByBatchCompleted">
	<remarks/>
</member><member name="E:Comum.wsComunikaREC.WSReceive.getCreditCompleted">
	<remarks/>
</member><member name="E:Comum.wsComunikaREC.WSReceive.messageReceiveCompleted">
	<remarks/>
</member><member name="E:Comum.wsComunikaREC.WSReceive.messageReceiveByDateCompleted">
	<remarks/>
</member><member name="E:Comum.wsComunikaREC.WSReceive.messageReceiveCountCompleted">
	<remarks/>
</member><member name="E:Comum.wsComunikaREC.WSReceive.messageReceiveCountByDateCompleted">
	<remarks/>
</member><member name="M:Comum.wsComunikaREC.WSReceive.getMessageStatusById(System.String,System.String)">
	<remarks/>
</member><member name="M:Comum.wsComunikaREC.WSReceive.getMessageStatusByIdAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:Comum.wsComunikaREC.WSReceive.getMessageStatusByIdAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:Comum.wsComunikaREC.WSReceive.getMessageStatusByPeriod(System.String,System.String,System.String,System.Int64)">
	<remarks/>
</member><member name="M:Comum.wsComunikaREC.WSReceive.getMessageStatusByPeriodAsync(System.String,System.String,System.String,System.Int64)">
	<remarks/>
</member><member name="M:Comum.wsComunikaREC.WSReceive.getMessageStatusByPeriodAsync(System.String,System.String,System.String,System.Int64,System.Object)">
	<remarks/>
</member><member name="M:Comum.wsComunikaREC.WSReceive.getMessageStatusByBatch(System.String,System.String,System.Int64)">
	<remarks/>
</member><member name="M:Comum.wsComunikaREC.WSReceive.getMessageStatusByBatchAsync(System.String,System.String,System.Int64)">
	<remarks/>
</member><member name="M:Comum.wsComunikaREC.WSReceive.getMessageStatusByBatchAsync(System.String,System.String,System.Int64,System.Object)">
	<remarks/>
</member><member name="M:Comum.wsComunikaREC.WSReceive.getCredit(System.String)">
	<remarks/>
</member><member name="M:Comum.wsComunikaREC.WSReceive.getCreditAsync(System.String)">
	<remarks/>
</member><member name="M:Comum.wsComunikaREC.WSReceive.getCreditAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:Comum.wsComunikaREC.WSReceive.messageReceive(System.String,System.Int64)">
	<remarks/>
</member><member name="M:Comum.wsComunikaREC.WSReceive.messageReceiveAsync(System.String,System.Int64)">
	<remarks/>
</member><member name="M:Comum.wsComunikaREC.WSReceive.messageReceiveAsync(System.String,System.Int64,System.Object)">
	<remarks/>
</member><member name="M:Comum.wsComunikaREC.WSReceive.messageReceiveByDate(System.String,System.String,System.String,System.Int64)">
	<remarks/>
</member><member name="M:Comum.wsComunikaREC.WSReceive.messageReceiveByDateAsync(System.String,System.String,System.String,System.Int64)">
	<remarks/>
</member><member name="M:Comum.wsComunikaREC.WSReceive.messageReceiveByDateAsync(System.String,System.String,System.String,System.Int64,System.Object)">
	<remarks/>
</member><member name="M:Comum.wsComunikaREC.WSReceive.messageReceiveCount(System.String)">
	<remarks/>
</member><member name="M:Comum.wsComunikaREC.WSReceive.messageReceiveCountAsync(System.String)">
	<remarks/>
</member><member name="M:Comum.wsComunikaREC.WSReceive.messageReceiveCountAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:Comum.wsComunikaREC.WSReceive.messageReceiveCountByDate(System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:Comum.wsComunikaREC.WSReceive.messageReceiveCountByDateAsync(System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:Comum.wsComunikaREC.WSReceive.messageReceiveCountByDateAsync(System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:Comum.wsComunikaREC.WSReceive.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:Comum.wsComunikaREC.WSReceive">
	<remarks/>
</member><member name="P:Comum.wsComunikaREC.responseGetMessageStatus.status">
	<remarks/>
</member><member name="P:Comum.wsComunikaREC.responseGetMessageStatus.offSet">
	<remarks/>
</member><member name="T:Comum.wsComunikaREC.responseGetMessageStatus">
	<remarks/>
</member><member name="P:Comum.wsComunikaREC.smsStatus.id">
	<remarks/>
</member><member name="P:Comum.wsComunikaREC.smsStatus.status">
	<remarks/>
</member><member name="P:Comum.wsComunikaREC.smsStatus.explain">
	<remarks/>
</member><member name="P:Comum.wsComunikaREC.smsStatus.phone">
	<remarks/>
</member><member name="P:Comum.wsComunikaREC.smsStatus.la">
	<remarks/>
</member><member name="T:Comum.wsComunikaREC.smsStatus">
	<remarks/>
</member><member name="P:Comum.wsComunikaREC.moResult.sender">
	<remarks/>
</member><member name="P:Comum.wsComunikaREC.moResult.msg">
	<remarks/>
</member><member name="P:Comum.wsComunikaREC.moResult.datetime">
	<remarks/>
</member><member name="P:Comum.wsComunikaREC.moResult.la">
	<remarks/>
</member><member name="T:Comum.wsComunikaREC.moResult">
	<remarks/>
</member><member name="P:Comum.wsComunikaREC.responseGeneric.result">
	<remarks/>
</member><member name="P:Comum.wsComunikaREC.responseGeneric.resultDesc">
	<remarks/>
</member><member name="P:Comum.wsComunikaREC.responseGeneric.token">
	<remarks/>
</member><member name="T:Comum.wsComunikaREC.responseGeneric">
	<remarks/>
</member><member name="P:Comum.wsComunikaREC.responseMessageCount.MOsCount">
	<remarks/>
</member><member name="T:Comum.wsComunikaREC.responseMessageCount">
	<remarks/>
</member><member name="P:Comum.wsComunikaREC.responseGetCredit.credit">
	<remarks/>
</member><member name="T:Comum.wsComunikaREC.responseGetCredit">
	<remarks/>
</member><member name="P:Comum.wsComunikaREC.responseMessageReceive.mos">
	<remarks/>
</member><member name="T:Comum.wsComunikaREC.responseMessageReceive">
	<remarks/>
</member><member name="T:Comum.wsComunikaREC.getMessageStatusByIdCompletedEventHandler">
	<remarks/>
</member><member name="P:Comum.wsComunikaREC.getMessageStatusByIdCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Comum.wsComunikaREC.getMessageStatusByIdCompletedEventArgs">
	<remarks/>
</member><member name="T:Comum.wsComunikaREC.getMessageStatusByPeriodCompletedEventHandler">
	<remarks/>
</member><member name="P:Comum.wsComunikaREC.getMessageStatusByPeriodCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Comum.wsComunikaREC.getMessageStatusByPeriodCompletedEventArgs">
	<remarks/>
</member><member name="T:Comum.wsComunikaREC.getMessageStatusByBatchCompletedEventHandler">
	<remarks/>
</member><member name="P:Comum.wsComunikaREC.getMessageStatusByBatchCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Comum.wsComunikaREC.getMessageStatusByBatchCompletedEventArgs">
	<remarks/>
</member><member name="T:Comum.wsComunikaREC.getCreditCompletedEventHandler">
	<remarks/>
</member><member name="P:Comum.wsComunikaREC.getCreditCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Comum.wsComunikaREC.getCreditCompletedEventArgs">
	<remarks/>
</member><member name="T:Comum.wsComunikaREC.messageReceiveCompletedEventHandler">
	<remarks/>
</member><member name="P:Comum.wsComunikaREC.messageReceiveCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Comum.wsComunikaREC.messageReceiveCompletedEventArgs">
	<remarks/>
</member><member name="T:Comum.wsComunikaREC.messageReceiveByDateCompletedEventHandler">
	<remarks/>
</member><member name="P:Comum.wsComunikaREC.messageReceiveByDateCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Comum.wsComunikaREC.messageReceiveByDateCompletedEventArgs">
	<remarks/>
</member><member name="T:Comum.wsComunikaREC.messageReceiveCountCompletedEventHandler">
	<remarks/>
</member><member name="P:Comum.wsComunikaREC.messageReceiveCountCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Comum.wsComunikaREC.messageReceiveCountCompletedEventArgs">
	<remarks/>
</member><member name="T:Comum.wsComunikaREC.messageReceiveCountByDateCompletedEventHandler">
	<remarks/>
</member><member name="P:Comum.wsComunikaREC.messageReceiveCountByDateCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Comum.wsComunikaREC.messageReceiveCountByDateCompletedEventArgs">
	<remarks/>
</member><member name="P:Comum.My.Resources.Resources.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:Comum.My.Resources.Resources.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="T:Comum.My.Resources.Resources">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="M:Comum.wsComunikaOPE.WSOperations.#ctor">
	<remarks/>
</member><member name="E:Comum.wsComunikaOPE.WSOperations.isMasterCompleted">
	<remarks/>
</member><member name="E:Comum.wsComunikaOPE.WSOperations.getAuthenticationCompleted">
	<remarks/>
</member><member name="E:Comum.wsComunikaOPE.WSOperations.getComunikaUserCompleted">
	<remarks/>
</member><member name="E:Comum.wsComunikaOPE.WSOperations.getMessageModelsCompleted">
	<remarks/>
</member><member name="M:Comum.wsComunikaOPE.WSOperations.isMaster(System.String)">
	<remarks/>
</member><member name="M:Comum.wsComunikaOPE.WSOperations.isMasterAsync(System.String)">
	<remarks/>
</member><member name="M:Comum.wsComunikaOPE.WSOperations.isMasterAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:Comum.wsComunikaOPE.WSOperations.getAuthentication(System.String,System.String)">
	<remarks/>
</member><member name="M:Comum.wsComunikaOPE.WSOperations.getAuthenticationAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:Comum.wsComunikaOPE.WSOperations.getAuthenticationAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:Comum.wsComunikaOPE.WSOperations.getComunikaUser(System.String)">
	<remarks/>
</member><member name="M:Comum.wsComunikaOPE.WSOperations.getComunikaUserAsync(System.String)">
	<remarks/>
</member><member name="M:Comum.wsComunikaOPE.WSOperations.getComunikaUserAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:Comum.wsComunikaOPE.WSOperations.getMessageModels(System.String)">
	<remarks/>
</member><member name="M:Comum.wsComunikaOPE.WSOperations.getMessageModelsAsync(System.String)">
	<remarks/>
</member><member name="M:Comum.wsComunikaOPE.WSOperations.getMessageModelsAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:Comum.wsComunikaOPE.WSOperations.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:Comum.wsComunikaOPE.WSOperations">
	<remarks/>
</member><member name="P:Comum.wsComunikaOPE.responseComunikaUserIsMaster.isMaster">
	<remarks/>
</member><member name="T:Comum.wsComunikaOPE.responseComunikaUserIsMaster">
	<remarks/>
</member><member name="P:Comum.wsComunikaOPE.responseGeneric.result">
	<remarks/>
</member><member name="P:Comum.wsComunikaOPE.responseGeneric.resultDesc">
	<remarks/>
</member><member name="P:Comum.wsComunikaOPE.responseGeneric.token">
	<remarks/>
</member><member name="T:Comum.wsComunikaOPE.responseGeneric">
	<remarks/>
</member><member name="P:Comum.wsComunikaOPE.messageModel.id">
	<remarks/>
</member><member name="P:Comum.wsComunikaOPE.messageModel.name">
	<remarks/>
</member><member name="P:Comum.wsComunikaOPE.messageModel.message">
	<remarks/>
</member><member name="T:Comum.wsComunikaOPE.messageModel">
	<remarks/>
</member><member name="P:Comum.wsComunikaOPE.responseComunikaUser.idUser">
	<remarks/>
</member><member name="P:Comum.wsComunikaOPE.responseComunikaUser.maskUser">
	<remarks/>
</member><member name="P:Comum.wsComunikaOPE.responseComunikaUser.idMaster">
	<remarks/>
</member><member name="P:Comum.wsComunikaOPE.responseComunikaUser.isMaster">
	<remarks/>
</member><member name="P:Comum.wsComunikaOPE.responseComunikaUser.useOnlyModels">
	<remarks/>
</member><member name="P:Comum.wsComunikaOPE.responseComunikaUser.requireApproval">
	<remarks/>
</member><member name="P:Comum.wsComunikaOPE.responseComunikaUser.nome">
	<remarks/>
</member><member name="P:Comum.wsComunikaOPE.responseComunikaUser.wsToken">
	<remarks/>
</member><member name="P:Comum.wsComunikaOPE.responseComunikaUser.splitMessage">
	<remarks/>
</member><member name="T:Comum.wsComunikaOPE.responseComunikaUser">
	<remarks/>
</member><member name="P:Comum.wsComunikaOPE.wsToken.lastUpdate">
	<remarks/>
</member><member name="P:Comum.wsComunikaOPE.wsToken.lastUpdateSpecified">
	<remarks/>
</member><member name="T:Comum.wsComunikaOPE.wsToken">
	<remarks/>
</member><member name="P:Comum.wsComunikaOPE.responseMessageModel.idUser">
	<remarks/>
</member><member name="P:Comum.wsComunikaOPE.responseMessageModel.messageModel">
	<remarks/>
</member><member name="T:Comum.wsComunikaOPE.responseMessageModel">
	<remarks/>
</member><member name="T:Comum.wsComunikaOPE.isMasterCompletedEventHandler">
	<remarks/>
</member><member name="P:Comum.wsComunikaOPE.isMasterCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Comum.wsComunikaOPE.isMasterCompletedEventArgs">
	<remarks/>
</member><member name="T:Comum.wsComunikaOPE.getAuthenticationCompletedEventHandler">
	<remarks/>
</member><member name="P:Comum.wsComunikaOPE.getAuthenticationCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Comum.wsComunikaOPE.getAuthenticationCompletedEventArgs">
	<remarks/>
</member><member name="T:Comum.wsComunikaOPE.getComunikaUserCompletedEventHandler">
	<remarks/>
</member><member name="P:Comum.wsComunikaOPE.getComunikaUserCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Comum.wsComunikaOPE.getComunikaUserCompletedEventArgs">
	<remarks/>
</member><member name="T:Comum.wsComunikaOPE.getMessageModelsCompletedEventHandler">
	<remarks/>
</member><member name="P:Comum.wsComunikaOPE.getMessageModelsCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:Comum.wsComunikaOPE.getMessageModelsCompletedEventArgs">
	<remarks/>
</member>
</members>
</doc>